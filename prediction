import os
import numpy as np
import cv2
import config

from constants import coco_labels

# Save predictions with bounding boxes and labels.
def save_predictions(img_tensor, prediction, image_id):
    img_np = img_tensor.permute(1, 2, 0).cpu().numpy()  # Convert to (H, W, C)
    img_np = np.clip(img_np * 255, 0, 255).astype(np.uint8)

    if img_np.shape[-1] == 1:
        img_np = np.repeat(img_np, 3, axis=-1)

    img_np = cv2.cvtColor(img_np, cv2.COLOR_RGB2BGR)

    pred_boxes = prediction['boxes'].cpu().numpy()
    pred_labels = prediction['labels'].cpu().numpy()
    pred_scores = prediction['scores'].cpu().numpy()

    for i, (box, label, score) in enumerate(zip(pred_boxes, pred_labels, pred_scores)):
        if score >= 0.5:
            x1, y1, x2, y2 = map(int, box)
            color = (0, 255, 0)
            cv2.rectangle(img_np, (x1, y1), (x2, y2), color, 2)
            cv2.putText(
                img_np, f"{coco_labels.get(label, 'Unknown')}",
                (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2
            )

    output_path = os.path.join(config.output_dir, f"output_{image_id}.png")
    cv2.imwrite(output_path, img_np)
